<!DOCTYPE html>
<html>
<head>
<meta charset="utf8" />
<title>How to build and install nuget packages (.nupkg) from sources ?</title>
</head>
<body><a href="https://github.com/ArsenShnurkov/gentoo-mono-handbook"><img alt="Fork me on GitHub" id="forkme" src="images/forkme.png" align="right" width="100" /></a>
<table><tr><td valign="top">
<h1>How to build and install nuget packages (.nupkg) from sources ?</h1>
</td><td valign="top">
<a href="index.htm">Gentoo Mono Handbook</a>
<br />
&nbsp;
</td></tr></table>
manifest is used to build a package and is also stored in the package after the package is built.

<h2>Typical .nuspec file</h2>

<pre><xmp>
<?xml version="1.0"?>
<package >
  <metadata>
    <id>$package_id$</id>
    <version>$package_version$</version>
    <authors>$package_authors$</authors>
    <owners>$package_owners$</owners>
    <licenseUrl>$package_licenseUrl$</licenseUrl>
    <projectUrl>$package_ProjectUrl$</projectUrl>
    <iconUrl>$package_iconUrl$</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>$package_description$</description>
    <releaseNotes>$package_releaseNotes$</releaseNotes>
    <copyright>$package_copyright$</copyright>
    <tags>$package_tags$</tags>
    <!--
    <dependencies>
      <dependency id="SampleDependency" version="1.0" />
    </dependencies>
    -->
  </metadata>
  <!-- the package element can include a files element that specifies files to be included in the package.
  If the files element is omitted, all files and folders that are 
  in the same folder as the .nuspec file are included in the package.
  (q) https://docs.nuget.org/create/nuspec-reference-->
</package>
</xmp></pre>
<a href="https://docs.nuget.org/Consume/Command-Line-Reference#pack-command">https://docs.nuget.org/Consume/Command-Line-Reference#pack-command</a>
<dl>
<dt>-Properties</dt>
<dd>Provides the ability to specify a semicolon ";" delimited list of properties when creating a package.</dd>
</dl>
If one set Properties twice, then nuget will give the error:
<pre><xmp>
Invalid option value: '-Properties package_version=4.1.3'
</xmp></pre>
And this is not very good, because it become more difficult to provide default values for that properties
<br />
<br />
The .nuspec file is included in the package after the package is built (but without the element that lists files if that element was included).
<br />
<br />
So, we need to copy file from ${FILESDIR} into output dir, and thus we will be able to use defaults.
<br />
<br />
or just add locations with a patch

 	
<h2>How to set version</h2>

Replace line
<pre><xmp>
<version>1.0.0</version>
</xmp></pre>
with property:
<pre><xmp>
        <version>$BuildVersion$</version>
</xmp></pre>
specify the property through nuget command line arguments in the ebuild:
<br />
<pre><xmp>
	enuspec -Prop BuildVersion=4.1.3 ./src/NuGet/NLog/NLog.nuspec
</xmp></pre>



<h2>How to create .nuspec file</h2>
 In the folder where the csproj file is, run:
<br />
nuget spec 
<br />
<pre><code>
# nuget spec SharpHsql.csproj 
Created 'SharpHsql.csproj.nuspec' successfully.
</code></pre>

The file will have following content:
<pre><xmp>
<?xml version="1.0"?>
<package >
  <metadata>
    <id>NLog.mono4.csproj</id>
    <version>1.0.0</version>
    <authors>user</authors>
    <owners>user</owners>
    <licenseUrl>http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE</licenseUrl>
    <projectUrl>http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE</projectUrl>
    <iconUrl>http://ICON_URL_HERE_OR_DELETE_THIS_LINE</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Package description</description>
    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>
    <copyright>Copyright 2015</copyright>
    <tags>Tag1 Tag2</tags>
    <dependencies>
      <dependency id="SampleDependency" version="1.0" />
    </dependencies>
  </metadata>
</package>
</xmp></pre>

</body>
</html>
